package controller;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import model.ThietBi;

public class CapNhatThietBiForm extends JFrame {
    private JLabel lblPreview;
    private String selectedImagePath;

    public CapNhatThietBiForm(ThietBi tb) {
        setTitle("‚úèÔ∏è C·∫≠p nh·∫≠t thi·∫øt b·ªã: " + tb.getMaTB());
        setSize(550, 600);
        setLocationRelativeTo(null);
        setLayout(new GridLayout(0, 2, 10, 10));

        add(new JLabel("T√™n thi·∫øt b·ªã:"));
        JTextField txtTen = new JTextField(tb.getTenTB()); add(txtTen);

        add(new JLabel("Lo·∫°i thi·∫øt b·ªã:"));
        JComboBox<String> cboLoai = new JComboBox<>(new String[]{"M√°y chi·∫øu", "√Çm thanh", "Kh√°c"});
        cboLoai.setSelectedItem(tb.getLoaiTB()); add(cboLoai);

        add(new JLabel("S·ªë l∆∞·ª£ng:"));
        JSpinner spSoLuong = new JSpinner(new SpinnerNumberModel(tb.getSoLuong(), 1, 1000, 1));
        add(spSoLuong);

        add(new JLabel("T√¨nh tr·∫°ng:"));
        JComboBox<String> cboTinhTrang = new JComboBox<>(new String[]{"T·ªët", "B√¨nh th∆∞·ªùng", "H∆∞ h·ªèng"});
        cboTinhTrang.setSelectedItem(tb.getTinhTrang()); add(cboTinhTrang);

        add(new JLabel("ƒê∆°n v·ªã t√≠nh:"));
        JTextField txtDonVi = new JTextField(tb.getDonViTinh()); add(txtDonVi);

        add(new JLabel("Nh√† cung c·∫•p:"));
        JTextField txtNCC = new JTextField(tb.getNhaCungCap()); add(txtNCC);

        add(new JLabel("Gi√° tr·ªã t√†i s·∫£n:"));
        JTextField txtGiaTri = new JTextField(String.valueOf(tb.getGiaTriTaiSan())); add(txtGiaTri);

        add(new JLabel("Ng√†y mua:"));
        JTextField txtNgayMua = new JTextField(String.valueOf(tb.getNgayMua())); add(txtNgayMua);

        add(new JLabel("H·∫°n b·∫£o h√†nh:"));
        JTextField txtHanBH = new JTextField(String.valueOf(tb.getHanBaoHanh())); add(txtHanBH);

        add(new JLabel("Ghi ch√∫:"));
        JTextField txtGhiChu = new JTextField(tb.getGhiChu()); add(txtGhiChu);

        JButton btnChonAnh = new JButton("üñºÔ∏è ƒê·ªïi ·∫£nh");
        lblPreview = new JLabel("", JLabel.CENTER);
        selectedImagePath = tb.getHinhAnh();
        if (selectedImagePath != null && !selectedImagePath.isEmpty()) {
            ImageIcon icon = new ImageIcon(selectedImagePath);
            Image img = icon.getImage().getScaledInstance(120, 120, Image.SCALE_SMOOTH);
            lblPreview.setIcon(new ImageIcon(img));
        } else {
            lblPreview.setText("Ch∆∞a c√≥ ·∫£nh");
        }
        add(btnChonAnh); add(lblPreview);

        JButton btnLuu = new JButton("üíæ C·∫≠p nh·∫≠t");
        JButton btnHuy = new JButton("‚ùå H·ªßy");
        add(btnLuu); add(btnHuy);

        btnChonAnh.addActionListener(e -> chonAnh());

        btnLuu.addActionListener(e -> {
            // TODO: update DB ·ªü ƒë√¢y
            JOptionPane.showMessageDialog(this, "ƒê√£ c·∫≠p nh·∫≠t (demo)");
            dispose();
        });

        btnHuy.addActionListener(e -> dispose());

        setVisible(true);
    }

    private void chonAnh() {
        JFileChooser fc = new JFileChooser();
        int result = fc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                File destDir = new File("images");
                destDir.mkdirs();
                File destFile = new File(destDir, file.getName());
                Files.copy(file.toPath(), destFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                selectedImagePath = "images/" + file.getName();
                ImageIcon icon = new ImageIcon(selectedImagePath);
                Image img = icon.getImage().getScaledInstance(120, 120, Image.SCALE_SMOOTH);
                lblPreview.setIcon(new ImageIcon(img));
                lblPreview.setText("");
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
}
