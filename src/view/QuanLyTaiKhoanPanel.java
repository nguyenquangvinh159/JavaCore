package view;

import javax.swing.*;
import javax.swing.table.*;

import controller.CapNhatTaiKhoanForm;

import java.awt.*;
import java.awt.event.*;
import java.util.List;
import java.util.stream.Collectors;
import model.TaiKhoan;
import model.DAO.TaiKhoanDAO;
import view.DanhSachThietBiPanel.ButtonEditor;
import view.DanhSachThietBiPanel.ButtonRenderer;

public class QuanLyTaiKhoanPanel extends JPanel {
    private JTable table;
    private DefaultTableModel model;
    private JTextField txtSearch;
    private List<TaiKhoan> danhSachGoc;

    public QuanLyTaiKhoanPanel() {
        setLayout(new BorderLayout());

        JLabel title = new JLabel("üë§ Qu·∫£n l√Ω t√†i kho·∫£n", JLabel.CENTER);
        title.setFont(new Font("Segoe UI", Font.BOLD, 20));
        add(title, BorderLayout.NORTH);

        JPanel topBar = new JPanel(new FlowLayout(FlowLayout.LEFT));
        txtSearch = new JTextField(20);
        JButton btnSearch = new JButton("üîç T√¨m");
        JButton btnAdd = new JButton("üì• Duy·ªát t√†i kho·∫£n");

        topBar.add(new JLabel("T√¨m t√™n ƒëƒÉng nh·∫≠p ho·∫∑c h·ªç t√™n:"));
        topBar.add(txtSearch);
        topBar.add(btnSearch);
        topBar.add(Box.createHorizontalStrut(30));
        topBar.add(btnAdd);

        add(topBar, BorderLayout.SOUTH);

        model = new DefaultTableModel(new Object[]{
            "T√™n ƒëƒÉng nh·∫≠p", "H·ªç t√™n", "Vai tr√≤", "Email", "SƒêT", "Tr·∫°ng th√°i", "S·ª≠a", "V√¥ hi·ªáu h√≥a"
        }, 0);
        table = new JTable(model);
        table.setRowHeight(30);
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);

        loadData();

        txtSearch.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            public void insertUpdate(javax.swing.event.DocumentEvent e) { timKiem(); }
            public void removeUpdate(javax.swing.event.DocumentEvent e) { timKiem(); }
            public void changedUpdate(javax.swing.event.DocumentEvent e) { timKiem(); }
        });
        btnAdd.addActionListener(e -> {
            List<TaiKhoan> canDuyet = danhSachGoc.stream()
                .filter(tk -> tk.getTrangThai() == 0)
                .collect(Collectors.toList());

            if (canDuyet.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Kh√¥ng c√≥ t√†i kho·∫£n n√†o ch·ªù duy·ªát.");
            } else {
                String message = "C√≥ " + canDuyet.size() + " t√†i kho·∫£n ch·ªù duy·ªát.\nH√£y k√≠ch ho·∫°t t·ª´ danh s√°ch.";
                JOptionPane.showMessageDialog(this, message);
            }
        });
    }

    private void timKiem() {
        String keyword = txtSearch.getText().toLowerCase();
        List<TaiKhoan> ketQua = danhSachGoc.stream()
            .filter(tk -> tk.getTenDangNhap().toLowerCase().contains(keyword) ||
                          tk.getHoTen().toLowerCase().contains(keyword))
            .collect(Collectors.toList());

        model.setRowCount(0);
        for (TaiKhoan tk : ketQua) {
            model.addRow(toRow(tk));
        }
    }

    private void loadData() {
        danhSachGoc = new TaiKhoanDAO().getAllTaiKhoan();
        model.setRowCount(0);
        for (TaiKhoan tk : danhSachGoc) {
            model.addRow(toRow(tk));
        }
        table.getColumn("S·ª≠a").setCellRenderer(new ButtonRenderer());
        table.getColumn("S·ª≠a").setCellEditor(new ButtonEditor(new JCheckBox(), "edit"));

        table.getColumn("V√¥ hi·ªáu h√≥a").setCellRenderer(new ButtonRenderer());
        table.getColumn("V√¥ hi·ªáu h√≥a").setCellEditor(new ButtonEditor(new JCheckBox(), "toggle"));
    }

    private Object[] toRow(TaiKhoan tk) {
        return new Object[]{
            tk.getTenDangNhap(),
            tk.getHoTen(),
            tk.getVaiTro(),
            tk.getEmail(),
            tk.getSoDienThoai(),
            tk.getTrangThai() == 1 ? "Ho·∫°t ƒë·ªông" : "V√¥ hi·ªáu h√≥a",
            "S·ª≠a",
            tk.getTrangThai() == 1 ? "V√¥ hi·ªáu h√≥a" : "K√≠ch ho·∫°t"
        };
    }
    class ButtonRenderer extends JButton implements TableCellRenderer {
        public ButtonRenderer() { setOpaque(true); }

        public Component getTableCellRendererComponent(JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null) ? "" : value.toString());
            return this;
        }
    }

    class ButtonEditor extends DefaultCellEditor {
        private String action;
        private JButton button;
        private String tenDangNhap;

        public ButtonEditor(JCheckBox checkBox, String action) {
            super(checkBox);
            this.action = action;
            button = new JButton();
            button.setOpaque(true);
            button.addActionListener(e -> fireEditingStopped());
        }

        public Component getTableCellEditorComponent(JTable table, Object value,
            boolean isSelected, int row, int column) {
            tenDangNhap = table.getValueAt(row, 0).toString(); // l·∫•y T√™n ƒëƒÉng nh·∫≠p
            button.setText((value == null) ? "" : value.toString());
            return button;
        }

        public Object getCellEditorValue() {
            if ("edit".equals(action)) {
                TaiKhoan tk = danhSachGoc.stream()
                    .filter(t -> t.getTenDangNhap().equals(tenDangNhap))
                    .findFirst().orElse(null);
                if (tk != null) {
                    new CapNhatTaiKhoanForm(tk, () -> loadData());
                }
            } else if ("toggle".equals(action)) {
                int xacNhan = JOptionPane.showConfirmDialog(null,
                    "B·∫°n c√≥ ch·∫Øc mu·ªën thay ƒë·ªïi tr·∫°ng th√°i t√†i kho·∫£n n√†y?",
                    "X√°c nh·∫≠n", JOptionPane.YES_NO_OPTION);
                if (xacNhan == JOptionPane.YES_OPTION) {
                    boolean ok = new TaiKhoanDAO().toggleTrangThai(tenDangNhap);
                    if (ok) {
                        loadData();
                    } else {
                        JOptionPane.showMessageDialog(null, "C·∫≠p nh·∫≠t tr·∫°ng th√°i th·∫•t b·∫°i!");
                    }
                }
            }
            return button.getText();
        }
    }

}
